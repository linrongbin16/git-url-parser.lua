name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}-ci
  cancel-in-progress: true
jobs:
  pr_conventional_commit:
    name: Conventional Commit
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ytanikin/PRConventionalCommits@1.1.0
        with:
          task_types: '["feat","fix","docs","test","ci","refactor","perf","chore","revert","break"]'
  luacheck:
    name: Lua Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: JohnnyMorganz/stylua-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --config-path .stylua.toml ./src  ./spec
      - uses: lunarmodules/luacheck@v1
        with:
          args: src  --config .luacheckrc
      - uses: stevearc/nvim-typecheck-action@v1
        with:
          path: src
          level: Information
          configpath: ".luarc.json"
      - uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ github.ref != 'refs/heads/main' }}
        with:
          commit_message: "chore(pr): auto-commit"
          push_options: "--force"
  unit_test:
    name: Unit Test
    strategy:
      matrix:
        lua_version: ["5.1.5","5.2.4","5.3.5","luajit-2.1.0-beta3"]
    needs:
      - luacheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: ${{ matrix.lua_version }}
      - uses: leafo/gh-actions-luarocks@v4
      - name: Install Luacov
        run: |
          echo 'pwd'
          echo $PWD
          echo 'ls-1'
          ls -lha
          luarocks  install luacov
          luarocks  install cluacov
      - uses: lunarmodules/busted@v2
        with:
            args:  .
      #- name: Generate Coverage Reports
      #  shell: bash
      #  run: |
      #    echo "ls ."
      #    ls -l .
      #    echo "run luacov"
      #    luacov
      #    echo "ls ."
      #    ls -l .
      #    echo "cat ./luacov.report.out"
      #    cat ./luacov.report.out
      #- uses: codecov/codecov-action@v3
      #  with:
      #    files: luacov.report.out
      #  env:
      #    CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  release:
    name: Release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - unit_test
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: giturlparser.lua
      - uses: actions/checkout@v4
      - uses: rickstaa/action-create-tag@v1
        if: ${{ steps.release.outputs.release_created }}
        with:
          tag: stable
          message: "Current stable release: ${{ steps.release.outputs.tag_name }}"
          tag_exists_error: false
          force_push_tag: true
      - uses: nvim-neorocks/luarocks-tag-release@v5
        if: ${{ steps.release.outputs.release_created }}
        env:
          LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
        with:
          name: giturlparser
          dependencies: |
            lua >= 5.1, luajit >= 2.0.0
          labels: |
            git
            neovim
          version: ${{ steps.release.outputs.tag_name }}
